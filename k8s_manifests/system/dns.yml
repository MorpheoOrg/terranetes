apiVersion: v1
kind: Service
metadata:
  name: kube-dns
  namespace: kube-system
  labels:
    run: kube-dns
    env: kube-system
    app: kube-dns
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: KubeDNS
spec:
  selector:
    run: kube-dns
    env: kube-system
    app: kube-dns
  clusterIP: ${kubedns_ip}
  ports:
    - name: dns
      port: 53
      protocol: UDP
    - name: dns-tcp
      port: 53
      protocol: TCP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-dns
  namespace: kube-system
  labels:
    run: kube-dns
    env: kube-system
    app: kube-dns
    kubernetes.io/cluster-service: 'true'
spec:
  replicas: ${replicas}
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      run: kube-dns
      env: kube-system
      app: kube-dns
  template:
    metadata:
      labels:
        run: kube-dns
        env: kube-system
        app: kube-dns
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: '[{\"key\":\"CriticalAddonsOnly\", \"operator\":\"Exists\"}]'
    spec:
      containers:
      ## KUBE-DNS ##
      - name: kubedns
        image: ${kubedns_image}
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          httpGet:
            path: /healthz-kubedns
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 3
          timeoutSeconds: 5
        args:
        - --domain=cluster.${cluster_name}
        - --dns-port=10053
        - --config-map=kube-dns
        # This should be set to v=2 only after the new image (cut from 1.5) has
        # been released, otherwise we will flood the logs.
        - --v=2
        ports:
        - containerPort: 10053
          name: dns-local
          protocol: UDP
        - containerPort: 10053
          name: dns-tcp-local
          protocol: TCP
        - containerPort: 10055
          name: metrics
          protocol: TCP

      ## DNSMASQ ##
      - name: dnsmasq
        image: ${dnsmasq_image}
        livenessProbe:
          httpGet:
            path: /healthz-dnsmasq
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        args:
          - --cache-size=1000
          - --no-resolv
          - --server=127.0.0.1#10053
          - --log-facility=-
        ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
        resources:
          requests:
            cpu: 150m
            memory: 10Mi

      ## DNSMASQ METRICS ##
      - name: dnsmasq-metrics
        image: ${dnsmasq_metrics_image}
        livenessProbe:
          httpGet:
            path: /metrics
            port: 10054
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        args:
        - --v=2
        - --logtostderr
        ports:
        - containerPort: 10054
          name: metrics
          protocol: TCP
        resources:
          requests:
            memory: 10Mi

      ## Health check for the whole pod ##
      - name: healthz
        image: ${exechealthz_image}
        resources:
          limits:
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 50Mi
        args:
          - --cmd=nslookup kubernetes.default.svc.cluster.${cluster_name} 127.0.0.1 >/dev/null
          - --url=/healthz-dnsmasq
          - --cmd=nslookup kubernetes.default.svc.cluster.${cluster_name} 127.0.0.1:10053 >/dev/null
          - --url=/healthz-kubedns
          - --port=8080
          - --quiet
        ports:
          - containerPort: 8080
            protocol: TCP

      nodeSelector:
        role.node: system
      restartPolicy: Always
      dnsPolicy: Default

