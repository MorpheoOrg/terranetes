kind: Service
apiVersion: v1
metadata:
  name: heapster
  namespace: kube-system
  labels:
    run: heapster
    env: kube-system
    app: heapster
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: Heapster
spec:
  ports:
    - port: 80
      targetPort: 8082
  selector:
    run: heapster
    env: kube-system
    app: heapster
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: heapster
  namespace: kube-system
  labels:
    run: heapster
    env: kube-system
    app: heapster
    kubernetes.io/cluster-service: 'true'
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: heapster
      env: kube-system
      app: heapster
  template:
    metadata:
      labels:
        run: heapster
        env: kube-system
        app: heapster
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: '[{\"key\":\"CriticalAddonsOnly\", \"operator\":\"Exists\"}]'
    spec:
      containers:
        - image: '${heapster_image}'
          name: heapster
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 180
            timeoutSeconds: 5
          resources:
            # keep request = limit to keep this container in guaranteed class
            limits:
              cpu: 200m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 300Mi
          command:
            - /heapster
            - --source=kubernetes.summary_api:''
        - image: '${heapster_image}'
          name: eventer
          resources:
            # keep request = limit to keep this container in guaranteed class
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 20m
              memory: 50Mi
          command:
            - /eventer
            - --source=kubernetes:''
            # - --sink=influxdb:http://monitoring-influxdb:8086
        - image: '${addon_resizer_image}'
          name: heapster-nanny
          resources:
            limits:
              cpu: 50m
              memory: 150Mi
            requests:
              cpu: 20m
              memory: 50Mi
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - /pod_nanny
            - --cpu=80m
            - --extra-cpu=0.5m
            - --memory=190Mi
            - --extra-memory=4Mi
            - --threshold=5
            - --deployment=heapster
            - --container=heapster
            - --poll-period=300000
            - --estimator=exponential
        - image: '${addon_resizer_image}'
          name: eventer-nanny
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 20m
              memory: 100Mi
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - /pod_nanny
            - --cpu=100m
            - --extra-cpu=0m
            - --memory=190Mi
            - --extra-memory=500Ki
            - --threshold=5
            - --deployment=heapster
            - --container=eventer
            - --poll-period=300000
            - --estimator=exponential
      nodeSelector:
        role.node: system
      restartPolicy: Always
